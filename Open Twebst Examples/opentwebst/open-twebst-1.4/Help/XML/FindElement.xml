<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" href="..\XSL\topic.xsl"?>

<topic name="FindElement" type="method">
	<title>
		Open Twebst Library | Documentation - FindElement Method
	</title>

	<description>
		Connects a web automation Element to an <a target="_bank" href="http://msdn.microsoft.com/en-us/library/aa752279(VS.85).aspx">IHTMLElement</a> that matches a tag-name and verifies a list of <reference href="SearchCondition.htm">Search Conditions</reference>.
	</description>

	<apply>
		<apply_item>Browser</apply_item>
		<apply_item>Frame</apply_item>
		<apply_item>Element</apply_item>
	</apply>

	<call>
		var e = obj.FindElement("tag_name", Search conditions);
	</call>

	<arguments>
		<arg_summary>
			This method accepts a variable number of <reference href="SearchCondition.htm">Search Condition</reference> arguments.
			Any HTML attribute is accepted in search conditions. <i>uiName</i> is also accepted as attribute in search conditions,
			in this case the text name of the HTML element is used in search.
			A special zero-based <i>index</i> attribute is available in search condition specifying the ordinal position in the collection of objects generated by the remaining search conditions.
			If no search condition is provided then the first element that matches the <i>tag_name</i> is returned.
		</arg_summary>
		<arg><code>tag_name</code> is the HTML tag of the element to be found.</arg>
	</arguments>

	<remarks>
		The method returns an Element IE automation object that matches the search condition arguments and has the specified <i>tag_name</i>.
		It provides programmatic control over the underlying <a target="_bank" href="http://msdn.microsoft.com/en-us/library/aa752279(VS.85).aspx">IHTMLElement</a> native object exposed by IE browser.
		If no element verifies the search conditions, then <i>null</i> is returned.<br/>
		In case of an error the method throws a script exception and the lastError property of the core object is set as follows:
		<ul>
			<li>INVALID_ARG_ERROR: if invalid parameters are provided</li>
			<li>BROWSER_CONNECTION_LOST_ERROR: if the browser was closed.</li>
			<li>FAIL_ERROR: in case of anohter error.</li>
		</ul>
		<br/>
		The time allocated for search is specified by the searchTimeout property.
		If loadTimeout is not zero, then the method waits the browser objects to be completely loaded in the amount of time specified by the property.
		If the timeout has expired the lastError property is set to LOAD_TIMEOUT_ERROR. In this case, if loadTimeoutIsError property is true,
		then a IE macro exception is thrown.
		<br/><br/>
		If the container object is a Browser, then the method searches the element in all the <i>frame</i> and <i>iframe</i> DOM hierarchy of the browser.
		If the container object is a Frame, then the method searches the element in all the <i>frame</i> and <i>iframe</i> DOM hierarchy of the container frame.
		If the container object is an Element, then the method searches the element in all HTML DOM hierarchy of the container.
		<br/><br/>		
		The target HTML element can be inside frames/iframes loaded from various domains. <i>Open Twebst Library</i> bypass all <b>cross-frame scripting security restrictions</b>
		(see: <a href="http://codecentrix.blogspot.com/2007/10/when-ihtmlwindow2getdocument-returns.html" target="_blank">When IHTMLWindow2::get_document returns E_ACCESSDENIED</a> and <a href="http://codecentrix.blogspot.com/2008/02/when-ihtmlwindow2document-throws.html" target="_blank">When IHTMLWindow2.document throws UnauthorizedAccessException</a>).
	</remarks>

	<example>
		<jscode>
var coreObj = new ActiveXObject("OpenTwebst.Core");
var browser = coreObj.StartBrowser("http://www.codecentrix.com/");

var element = browser.FindElement("a", "text=Download");
element.Click();
		</jscode>
	</example>

	<seealso>
		<seealso_item>Element</seealso_item>
		<seealso_item>FindChildElement</seealso_item>
		<seealso_item>loadTimeout</seealso_item>
		<seealso_item>searchTimeout</seealso_item>
	</seealso>
</topic>
