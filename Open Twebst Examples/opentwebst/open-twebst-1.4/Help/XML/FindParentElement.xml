<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" href="..\XSL\topic.xsl"?>

<topic name="FindParentElement" type="method">
	<title>
		Open Twebst Library | Documentation - FindParentElement Method
	</title>

	<description>
		Searches a parent <a target="_bank" href="http://msdn.microsoft.com/en-us/library/aa752279(VS.85).aspx">IHTMLElement</a> up
		in the HTML DOM hierarchy that matches a tag-name and verifies a list of <reference href="SearchCondition.htm">Search Conditions</reference>.
	</description>

	<apply>
		<apply_item>Element</apply_item>
	</apply>

	<call>
		var parent = element.FindParentElement("tag_name", Search conditions);
	</call>

	<arguments>
		<arg_summary>
			This method accepts a variable number of <reference href="SearchCondition.htm">Search Condition</reference> arguments.
			Any HTML attribute is accepted in search conditions. <i>uiName</i> is also accepted as attribute in search conditions,
			in this case the text name of the HTML element is used in search. If no search condition is provided, the first
			parent element that matches the <i>tag_name</i> is returned.
			If the <i>tag_name</i> is empty, the first parent that matches the search condition arguments is returned.
		</arg_summary>
		<arg><code>tag_name</code> is the HTML tag of the element to be found (can be empty string).</arg>
	</arguments>

	<remarks>
		The method returns an web macro Element object that matches the search condition arguments and has the specified <i>tag_name</i>.
		It provides programmatic control over the underlying <a target="_bank" href="http://msdn.microsoft.com/en-us/library/aa752279(VS.85).aspx">IHTMLElement</a> native object exposed by IE browser.
		If no element verifies the search conditions, then <i>null</i> is returned.<br/>
		In case of an error the method throws a IE macro exception and the lastError property of the core object is set as follows:
		<ul>
			<li>INVALID_ARG_ERROR: if invalid parameters are provided</li>
			<li>BROWSER_CONNECTION_LOST_ERROR: if the browser was closed.</li>
			<li>FAIL_ERROR: in case of anohter error.</li>
		</ul>
		<br/>
		The time allocated for search is specified by the searchTimeout property.
		If loadTimeout is not zero, then the method waits the browser objects to be completely loaded in the amount of time specified by the property.
		If the timeout has expired the lastError property is set to LOAD_TIMEOUT_ERROR. In this case, if loadTimeoutIsError property is true,
		then a IE automation exception is thrown.
	</remarks>

	<example>
		<jscode>
var core    = new ActiveXObject("OpenTwebst.Core");
var browser = core.StartBrowser("http://www.google.com/");
var elem    = browser.FindElement("input text", "");

// Search the first parent having the name "f".
var parent = elem.FindParentElement("", "name=f");
WScript.Echo(parent.tagName + " " + parent.nativeElement.innerText);
		</jscode>
	</example>

	<seealso>
		<seealso_item>Element</seealso_item>
		<seealso_item>FindElement</seealso_item>
		<seealso_item>loadTimeout</seealso_item>
		<seealso_item>parentElement</seealso_item>
		<seealso_item>searchTimeout</seealso_item>
	</seealso>
</topic>
