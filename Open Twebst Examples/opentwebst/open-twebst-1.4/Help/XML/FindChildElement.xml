<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" href="..\XSL\topic.xsl"?>

<topic name="FindChildElement" type="method">
	<title>
		Open Twebst Library | Documentation - FindChildElement Method
	</title>

	<description>
		Searches inside a container object, a direct HTML child element that matches a tag-name and verifies a list of <reference href="SearchCondition.htm">Search Conditions</reference>.
	</description>

	<apply>
		<apply_item>Frame</apply_item>
		<apply_item>Element</apply_item>
	</apply>

	<call>
		var e = obj.FindChildElement("tag_name", Search conditions);
	</call>

	<arguments>
		<arg_summary>
			This method accepts a variable number of <reference href="SearchCondition.htm">Search Condition</reference> arguments.
			Any HTML attribute is accepted in search conditions. <i>uiName</i> is also accepted as attribute in search conditions,
			in this case the text name of the HTML element is used in search.
			A special zero-based <i>index</i> attribute is available in search condition specifying the ordinal position in the collection of objects generated by the remaining search conditions.
			If no search condition is provided, then the first element that matches the <i>tag_name</i> is returned.
		</arg_summary>
		<arg><code>tag_name</code> is the HTML tag of the element to be found.</arg>
	</arguments>

	<remarks>
		The method returns a web automation Element object that matches the search condition arguments and has the specified <i>tag_name</i>.
		It provides programmatic control over the underlying <a target="_blank" href="http://msdn.microsoft.com/en-us/library/aa752279(VS.85).aspx">IHTMLElement</a> native object exposed by IE browser.
		If no element verifies the search conditions, then <i>null</i> is returned.<br/>
		In case of an error the method throws a macro exception and the lastError property of the core object is set as follows:
		<ul>
			<li>INVALID_ARG_ERROR: if invalid parameters are provided</li>
			<li>BROWSER_CONNECTION_LOST_ERROR: if the browser was closed.</li>
			<li>FAIL_ERROR: in case of anohter error.</li>
		</ul>
		<br/>
		The time allocated for search is specified by the searchTimeout property.
		If loadTimeout is not zero, then the method waits the browser objects to be completely loaded in the amount of time specified by the property.
		If the timeout has expired the lastError property is set to LOAD_TIMEOUT_ERROR. In this case, if loadTimeoutIsError property is true,
		then a script exception is thrown.
		<br/><br/>
		If the container object is a macro Frame object, then the method searches the element in the HTML document associated with the frame.
		If the container object is a macro Element object, then the method searches the element among the direct children elements of the container element.
	</remarks>

	<example>
		<jscode>
var coreObj = new ActiveXObject("OpenTwebst.Core");
var browser = coreObj.StartBrowser("http://www.codecentrix.com/");

var element = browser.topFrame.FindChildElement("a", "text=Download");
element.Click();
		</jscode>
	</example>

	<seealso>
		<seealso_item>Element</seealso_item>
		<seealso_item>FindElement</seealso_item>
		<seealso_item>loadTimeout</seealso_item>
		<seealso_item>searchTimeout</seealso_item>
	</seealso>
</topic>
